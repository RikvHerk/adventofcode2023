from time import perf_counter

def check(p, i, c): #puzzle input coordinate
    seg = p[c:c+len(i)]
    for j in range(len(i)):
        if seg[j] == "?" or i[j] == seg[j]:
            continue
        else:
            return False
    return True

def solve(puz, instr, ni, start):
    s = 0
    si = start
    i = instr[ni]
    seg = ["."] + ["#"]*i + ["."]
    while start <= len(puz)-len(seg):
        c = check(puz, seg, start)
        if c:
            if "#" in puz[si:start]:
                return s
            if ni == len(instr) - 1:
                if "#" not in puz[start+len(seg):]:
                    s += 1
                start += 1
                continue
            else:
                sol = solve(puz, instr, ni+1, start + i + 1)
                start += 1 
                if sol > 0:
                    s += sol
        else:
            start += 1
    return s


with open("day12.txt", 'r') as inp:
    lines = inp.readlines()
puzzle = []
instructions = []

for line in lines:
    x = line.split(" ")
    puzzle.append(["."] + [i for i in x[0]] +["?"] + ["."])
    instructions.append([int(i) for i in x[1].split(",")])
s2=[129, 2715, 6, 9, 1741, 48, 2, 92, 129, 1, 422, 20, 6, 20, 9, 20, 15, 1480, 1, 1, 12, 9, 48, 79, 60, 12, 1, 2776, 134, 49, 32, 4, 6, 96, 2, 6, 6, 4, 24, 25, 18, 1, 4, 6, 14, 4, 13, 9, 4, 77, 70, 127, 9, 64, 4, 22, 15, 100, 221, 4, 16, 268, 89, 58, 8, 9, 108, 92, 25, 233, 9, 1, 169, 102, 1127, 62, 13548, 9, 6, 16, 4, 4, 1, 6, 16, 20, 3, 10626, 18, 45, 16, 1, 1, 86, 8393, 1, 16, 6, 4, 828, 9, 3, 16, 11020, 6, 24, 177, 45, 95, 32, 2, 16, 8, 16, 1, 4, 9, 24, 401, 9, 249, 106, 780, 4, 16, 242, 1, 1426, 2646, 4, 45, 247, 1, 2293, 30, 8, 36, 214, 64, 4811, 1, 1, 4, 5, 7, 4, 2805, 8, 120, 4, 4, 150, 16, 12, 416, 24, 88, 12, 4, 21, 405, 8, 25, 69, 4, 9, 302, 24, 86, 17, 18, 18, 75, 346, 6, 276, 1758, 107, 86, 10, 1, 6, 36, 1, 6, 2793, 1026, 9, 3, 19, 231, 3, 9, 6, 1, 169, 125, 2, 26, 32, 28, 48, 10, 1374, 25, 24, 95, 216, 204, 103, 16, 42, 1, 8, 1, 12, 129, 1, 177, 283, 8, 4, 4, 24, 29, 4, 2, 2, 120, 14904, 788, 29, 1, 78, 6, 20, 1, 1, 4, 332, 2346, 1, 1, 9, 9, 15, 128, 2100, 117, 9, 2, 1250, 18, 1, 161, 10, 12, 48, 36, 12, 60, 9, 3, 1557, 1, 20, 18, 24, 16, 249, 6, 9, 13, 44, 10, 2, 94, 20, 1, 8, 196, 450, 2, 361, 72, 6, 25, 44, 394, 6, 8, 447, 4, 1, 54, 3, 288, 1, 2, 7920, 5994, 9, 48, 1, 2383, 30, 72, 6, 36, 412, 147, 4, 36, 7, 310, 2, 12, 1787, 4, 4, 81, 16, 12, 8, 1, 4, 40, 53, 2, 16, 16, 48, 238, 30, 111, 16, 143, 17040, 151, 44, 1, 147, 1016, 12, 954, 442, 4, 27, 20, 18, 104, 4, 21, 18, 9, 4, 4, 6, 128, 8, 32, 19, 54, 4, 90, 24, 1, 630, 1, 68, 4, 4, 145, 2988, 6, 400, 2, 10979, 93, 41, 24, 24, 4, 44, 9, 11, 32, 40, 3, 204, 40, 6, 448, 1, 3167, 8, 7, 35, 3, 15, 1, 78, 75, 32, 1041, 373, 694, 4, 72, 24, 6, 6, 20, 20, 86, 776, 36, 11, 4, 44, 292, 1, 68, 15, 132, 2, 2257, 1, 27, 46, 60, 9, 5, 54, 4, 60, 9, 4, 2, 10, 27, 49, 57, 4, 44, 26, 120, 20, 17, 18, 95, 297, 8, 840, 15625, 31, 43758, 4871, 10, 24, 2, 8, 581, 4, 1, 9, 30, 8008, 75, 28, 12, 7, 4, 80, 91, 69, 4, 9, 49, 14, 50, 18, 1, 4, 328, 237, 1, 68, 75, 9, 204, 4, 48, 6, 66, 28, 4, 1, 1, 30, 2524, 620, 6, 111, 196, 124, 28, 5, 3, 1, 780, 6, 49, 18, 4085, 200, 505, 494, 9, 4, 2958, 17, 5620, 1, 24, 5645, 1, 21, 217, 50, 16, 18, 28, 515, 13, 6, 310, 264, 132, 4, 8, 20, 4305, 60, 27, 1, 88, 521, 4, 193, 4, 14, 8, 36, 10, 72, 16, 55, 25, 2776, 1, 236, 20, 9, 66, 6, 9, 91, 432, 556, 46, 16, 3847, 12, 63, 71, 39, 23137, 50, 8, 40, 230, 20, 29, 28, 8, 41, 283, 4, 54, 894, 9, 16, 35, 4, 9, 40, 32, 4, 312, 6, 4, 16, 41, 32, 284, 68, 170, 22, 98, 8, 6218, 18, 76, 321, 288, 33, 1, 2, 293, 9, 1, 25, 3, 4, 4, 6, 252, 216, 81, 6, 4, 171, 6, 30, 6, 1, 24, 1, 45, 15, 360, 83, 64, 96, 27, 47, 4, 24, 12, 45, 230, 151, 10, 210, 8, 2, 2125, 1068, 210, 688, 6792, 72, 10, 11206, 2021, 40, 9, 1155, 10, 1, 64, 1, 1, 3, 315, 2, 138, 4, 134, 66, 15, 149, 66, 81, 39, 4, 4941, 36, 679, 935, 4, 7070, 28, 390, 12, 28, 21, 1492, 3, 28, 3003, 81, 4, 4, 12, 3, 101, 8, 2, 4, 12, 13, 297, 36, 457, 36, 127, 64, 4, 207, 1, 4, 24, 14, 30, 7, 25, 3, 4, 4, 169, 299, 95, 12, 79, 143, 57, 36, 128, 24, 22, 182, 551, 9, 4, 43, 45, 54, 1, 4, 4, 4, 190, 35, 70, 72, 3, 472, 292, 10, 4, 355, 6, 126, 16, 13, 24, 3, 344, 119, 2, 9, 9, 9, 1, 16, 68, 81, 4, 9, 398, 16, 2, 11, 1, 2, 1024, 2118, 4, 2, 340, 288, 4, 25, 6, 130, 4, 18564, 252, 405, 4, 1, 12, 8, 33, 12, 34, 6, 536, 1, 15, 8, 1593, 81, 127, 560, 21, 692, 82, 218, 6, 12, 391, 1, 30414, 4, 1760, 9, 23, 8, 18, 9, 46, 1, 48, 36, 6, 1, 3, 1, 242, 1664, 398, 16, 2, 15, 87, 18, 109, 122, 18, 4, 4, 4, 32, 168, 160, 4, 81, 360, 15, 162, 534, 12106, 3, 9, 18, 9, 48, 112, 244, 95, 2, 54, 6, 15, 25, 14, 9, 400, 27, 98, 72, 15, 189, 66, 259, 4, 75, 4, 90, 1360, 43, 2, 1, 1, 35, 16, 36, 6, 1, 20, 7, 1, 1, 27, 21, 4, 12, 200, 9, 32, 28, 300, 6, 18, 16, 160, 6, 4, 3, 16, 91, 1, 23, 20, 78, 36, 36, 131, 105, 496, 2, 48, 313, 9, 10, 64, 4, 12, 50, 2751, 15, 110, 19, 1, 1, 153, 8, 16, 139, 8, 18, 36, 856, 6, 15, 15, 20, 5329, 44, 11, 157, 18, 2586, 1, 9, 153, 9, 5, 7, 67, 7000, 67, 54, 155, 4, 9, 30, 123, 332, 54, 2251, 6, 258, 210, 98, 99, 5, 1, 55, 4, 53, 75206, 4, 27, 447, 296, 4]
s = []
t1 = perf_counter()
for i in range(len(puzzle)):
    s.append(s2[i]/solve(puzzle[i], instructions[i], 0, 0))
    
print(s, perf_counter()-t1)